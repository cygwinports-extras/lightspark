--- origsrc/lightspark-0.7.2/CMakeLists.txt	2013-03-16 06:19:18.000000000 -0500
+++ src/lightspark-0.7.2/CMakeLists.txt	2014-09-23 21:29:07.148266300 -0500
@@ -376,12 +376,12 @@ IF(CMAKE_COMPILER_IS_GNUCC)
   IF(MINGW)
     SET(CMAKE_EXE_LINKER_FLAGS "-Wl,--as-needed,--no-undefined -mthreads ${CMAKE_EXE_LINKER_FLAGS}")
     SET(CMAKE_SHARED_LINKER_FLAGS "-Wl,--as-needed,--no-undefined,--enable-stdcall-fixup -mthreads ${CMAKE_SHARED_LINKER_FLAGS}")
-  ELSE()
+  ELSEIF(NOT CYGWIN)
     SET(CMAKE_EXE_LINKER_FLAGS "-Wl,--as-needed -Wl,--no-undefined ${CMAKE_EXE_LINKER_FLAGS}")
     SET(CMAKE_SHARED_LINKER_FLAGS "-Wl,--as-needed,-z,noexecstack,--no-undefined ${CMAKE_SHARED_LINKER_FLAGS}")
-  ENDIF()
   SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "-s")
   SET(CMAKE_SHARED_LINKER_FLAGS_RELEASE "-s")
+  ENDIF()
 ENDIF(CMAKE_COMPILER_IS_GNUCC)
 
 LINK_DIRECTORIES(${LLVM_LIB_DIR})
@@ -417,6 +417,9 @@ IF(CMAKE_COMPILER_IS_GNUCC)
   IF(MINGW)
     SET(CMAKE_CXX_FLAGS
 	   "${CMAKE_CXX_FLAGS} -mms-bitfields -mthreads -fexceptions -Wall -Wnon-virtual-dtor -Woverloaded-virtual -pipe -std=c++0x -Wdisabled-optimization -Wextra -Wno-unused-parameter -Wno-invalid-offsetof")
+  ELSEIF(CYGWIN)
+   SET(CMAKE_CXX_FLAGS
+	  "${CMAKE_CXX_FLAGS} -Wall -Wnon-virtual-dtor -Woverloaded-virtual -pipe -std=gnu++11 -Wdisabled-optimization -Wextra -Wno-unused-parameter -Wno-invalid-offsetof")
   ELSE()
    SET(CMAKE_CXX_FLAGS
 	  "${CMAKE_CXX_FLAGS} -Wall -Wnon-virtual-dtor -Woverloaded-virtual -pipe -fvisibility=hidden -fvisibility-inlines-hidden -std=c++0x -Wdisabled-optimization -Wextra -Wno-unused-parameter -Wno-invalid-offsetof")
--- origsrc/lightspark-0.7.2/src/CMakeLists.txt	2013-03-16 06:19:18.000000000 -0500
+++ src/lightspark-0.7.2/src/CMakeLists.txt	2014-09-23 21:31:56.298499700 -0500
@@ -105,7 +105,7 @@ SET(LIBSPARK_SOURCES
   scripting/class.cpp
   scripting/toplevel/toplevel.cpp
   platforms/engineutils.cpp)
-IF(MINGW)
+IF(MINGW OR CYGWIN)
   SET(LIBSPARK_SOURCES ${LIBSPARK_SOURCES} platforms/slowpaths_generic.cpp)
 ELSE()
   IF(${i386})
@@ -156,7 +156,7 @@ ENDIF(ENABLE_GLES2)
 
 PACK_LIBRARY(spark)
 #We have to use LIBRARY on linux and RUNTIME on win32
-INSTALL(TARGETS spark RUNTIME DESTINATION ${PRIVATELIBDIR} LIBRARY DESTINATION ${PRIVATELIBDIR})
+INSTALL(TARGETS spark RUNTIME DESTINATION bin LIBRARY DESTINATION ${PRIVATELIBDIR})
 
 # lightspark executable target
 IF(COMPILE_LIGHTSPARK)
--- origsrc/lightspark-0.7.2/src/backends/interfaces/audio/pulse/CMakeLists.txt	2013-03-16 06:19:18.000000000 -0500
+++ src/lightspark-0.7.2/src/backends/interfaces/audio/pulse/CMakeLists.txt	2014-09-23 21:29:41.848314200 -0500
@@ -48,6 +48,9 @@ SET(PULSEPLUGIN_SOURCES PulsePlugin.cpp
 ADD_LIBRARY(pulseplugin MODULE ${PULSEPLUGIN_SOURCES})
 TARGET_LINK_LIBRARIES(pulseplugin spark) #Need to link some functions with the decoders
 TARGET_LINK_LIBRARIES(pulseplugin ${PULSE_LIBS_LIBRARIES} ${Boost_LIBRARIES})
+IF(CYGWIN)
+  TARGET_LINK_LIBRARIES(pulseplugin intl)
+ENDIF(CYGWIN)
 SET_TARGET_PROPERTIES(pulseplugin PROPERTIES OUTPUT_NAME lightsparkpulseplugin)
 #SET_TARGET_PROPERTIES(pulseplugin PROPERTIES VERSION "${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}")
 #SET_TARGET_PROPERTIES(pulseplugin PROPERTIES SOVERSION "${MAJOR_VERSION}.${MINOR_VERSION}")
--- origsrc/lightspark-0.7.2/src/backends/pluginmanager.cpp	2013-03-16 06:19:18.000000000 -0500
+++ src/lightspark-0.7.2/src/backends/pluginmanager.cpp	2014-09-23 21:30:23.248371300 -0500
@@ -51,7 +51,11 @@ void PluginManager::findPlugins()
 #else
 	const path plugins_folder = string(PRIVATELIBDIR) + "/plugins/";
 #endif
+#ifdef __CYGWIN__
+	const string pattern ( "cyglightspark+[A-Za-z]+plugin.*" );
+#else
 	const string pattern ( "liblightspark+[A-Za-z]+plugin.*" );
+#endif
 
 	//Stuff used by/for pcre
 	const char* patternError;
